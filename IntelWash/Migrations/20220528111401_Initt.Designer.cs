// <auto-generated />
using System;
using IntelWash.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntelWash.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220528111401_Initt")]
    partial class Initt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("IntelWash.Model.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("IntelWash.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IntelWash.Model.ProvidedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SalesPointId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SalesPointId");

                    b.ToTable("ProvidedProducts");
                });

            modelBuilder.Entity("IntelWash.Model.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesPointId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SalesPointId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("IntelWash.Model.SaleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ProductIdAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleDatas");
                });

            modelBuilder.Entity("IntelWash.Model.SalesId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("SalesIds");
                });

            modelBuilder.Entity("IntelWash.Model.SalesPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalesPoints");
                });

            modelBuilder.Entity("IntelWash.Model.ProvidedProduct", b =>
                {
                    b.HasOne("IntelWash.Model.SalesPoint", "SalesPoint")
                        .WithMany("ProvidedProducts")
                        .HasForeignKey("SalesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesPoint");
                });

            modelBuilder.Entity("IntelWash.Model.Sale", b =>
                {
                    b.HasOne("IntelWash.Model.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntelWash.Model.SalesPoint", "SalePoint")
                        .WithMany()
                        .HasForeignKey("SalesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("SalePoint");
                });

            modelBuilder.Entity("IntelWash.Model.SaleData", b =>
                {
                    b.HasOne("IntelWash.Model.Sale", "Sale")
                        .WithMany("SalesData")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("IntelWash.Model.SalesId", b =>
                {
                    b.HasOne("IntelWash.Model.Buyer", "Buyer")
                        .WithMany("SalesId")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("IntelWash.Model.Buyer", b =>
                {
                    b.Navigation("SalesId");
                });

            modelBuilder.Entity("IntelWash.Model.Sale", b =>
                {
                    b.Navigation("SalesData");
                });

            modelBuilder.Entity("IntelWash.Model.SalesPoint", b =>
                {
                    b.Navigation("ProvidedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
